import socorro.lib.ConfigurationManager as cm

from config.commonconfig import storageRoot
from config.commonconfig import deferredStorageRoot
from config.commonconfig import jsonFileSuffix
from config.commonconfig import dumpFileSuffix

from config.collectorconfig import dumpPermissions
from config.collectorconfig import dirPermissions
from config.collectorconfig import dumpGID
from config.collectorconfig import dumpDirCount
from config.collectorconfig import storageDepth
from config.collectorconfig import hbaseHost
from config.collectorconfig import hbasePort
from config.collectorconfig import neverDiscard
from config.collectorconfig import throttleConditions
from config.collectorconfig import minimalVersionForUnderstandingRefusal
from config.collectorconfig import benchmark
from config.collectorconfig import hbasePort

resubmissionDateList = cm.Option()
resubmissionDateList.doc = 'a comma delimited list of dates (YYYY-DD-MM,...)'
resubmissionDateList.default = None

#-------------------------------------------------------------------------------
# Logging

syslogHost = cm.Option()
syslogHost.doc = 'syslog hostname'
syslogHost.default = 'localhost'

syslogPort = cm.Option()
syslogPort.doc = 'syslog port'
syslogPort.default = 514

syslogFacilityString = cm.Option()
syslogFacilityString.doc = 'syslog facility string ("user", "local0", etc)'
syslogFacilityString.default = 'user'

syslogLineFormatString = cm.Option()
syslogLineFormatString.doc = 'python logging system format for syslog entries'
syslogLineFormatString.default = 'Socorro Collector (pid %(process)d): %(asctime)s %(levelname)s - %(threadName)s - %(message)s'

syslogErrorLoggingLevel = cm.Option()
syslogErrorLoggingLevel.doc = 'logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)'
syslogErrorLoggingLevel.default = 10

stderrLineFormatString = cm.Option()
stderrLineFormatString.doc = 'python logging system format for logging to stderr'
stderrLineFormatString.default = '%(asctime)s %(levelname)s - %(message)s'

stderrErrorLoggingLevel = cm.Option()
stderrErrorLoggingLevel.doc = 'logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)'
stderrErrorLoggingLevel.default = 10

