# This is the common configuration file for the Socorro mod-wsgi Collector.
#
# Parameters are consist of three or four lines of Python code.  The first line
# defines the parameter:

# someParameter = cm.Option()

# The second line provides one line of documentation about the parameter.
# This line is also used to as the text in the '--help' option invoked from the
# command line.

# someParameter.doc = 'this is what this parameter is about'

# The third line is the default value for the parameter.  Adjust this line as
# necessary.  This value will be overridden if the user specifies a different
# value on the command line.

# someParameter.default = '00:00:30'

# The option fourth line specifies a Python function (or callable) that will
# serve to take a text version of the parameter value and turn it into the
# proper type.  This is useful for things like taking a textual datetime value
# and turning them into a real datetime value.  The ConfigurationManager module
# offers a number of converters:  dateTimeConverter, timeDeltaConverter,
# booleanConverter.  If the value of 'default' is a fundamental type like int
# or float, it is not necessary to provide a fromStringConverter.

# someParameter.fromStringConverter = ConfigurationManager.dateTimeConverter
#-------------------------------------------------------------------------------

import stat
import re

import socorro.lib.ConfigurationManager as cm

#-------------------------------------------------------------------------------
# Storage constants

from config.commonconfig import jsonFileSuffix
from config.commonconfig import dumpFileSuffix

#-------------------------------------------------------------------------------
# HBase storage system
from config.commonconfig import hbaseHost
from config.commonconfig import hbasePort
from config.commonconfig import hbaseTimeout
from config.commonconfig import hbaseRetry
from config.commonconfig import hbaseRetryDelay

hbaseFallbackFS = cm.Option()
hbaseFallbackFS.doc = 'a path to a local file system to use if hbase fails'
hbaseFallbackFS.default = './'

hbaseFallbackDumpDirCount = cm.Option()
hbaseFallbackDumpDirCount.doc = 'the number of dumps to be stored in a single directory in the hbaseFallback File System'
hbaseFallbackDumpDirCount.default = 1024

hbaseFallbackDumpGID = cm.Option()
hbaseFallbackDumpGID.doc="the group ID for saved crashes in hbaseFallback File System (optional)"
hbaseFallbackDumpGID.default = None

hbaseFallbackDumpPermissions = cm.Option()
hbaseFallbackDumpPermissions.doc = "a number used for permissions crash dump files in the hbaseFallback File System"
hbaseFallbackDumpPermissions.default = stat.S_IRGRP | stat.S_IWGRP | stat.S_IRUSR | stat.S_IWUSR

hbaseFallbackDirPermissions = cm.Option()
hbaseFallbackDirPermissions.doc = "a number used for permissions for directories in the hbaseFallback File System"
hbaseFallbackDirPermissions = stat.S_IRGRP | stat.S_IXGRP | stat.S_IWGRP | stat.S_IRUSR | stat.S_IXUSR | stat.S_IWUSR

#-------------------------------------------------------------------------------
# application server parameters

modwsgiInstallation = cm.Option()
modwsgiInstallation.doc = 'True or False, this app is installed under mod_wsgi'
modwsgiInstallation.default = False

serverIPAddress = cm.Option()
serverIPAddress.doc = 'the IP address from which to accept submissions if not installed under mod_wsgi'
serverIPAddress.default = '127.0.0.1'

serverPort = cm.Option()
serverPort.doc = 'the port to listen to for submissions if not installed under mod_wsgi'
serverPort.default = 8882

# The form field the client sends the dump in
dumpField = cm.Option()
dumpField.default = "upload_file_minidump"

# Returned to the client with a ooid following
dumpIDPrefix = cm.Option()
dumpIDPrefix.default = "bp-"

# Bugzilla 495700 - need to be able to ignore new Thottleable protocol
neverDiscard = cm.Option()
neverDiscard.default = True
neverDiscard.fromStringConverter = cm.booleanConverter

throttleConditions = cm.Option()
throttleConditions.default = [
  ("Version", lambda x: x[-3:] == "pre" or x[3] in 'ab', 100.0), # queue 100% of crashes with version ending in "pre" or having 'a' or 'b'
  #("Add-ons", re.compile('inspector\@mozilla\.org\:1\..*'), 75.0), # queue 75% of crashes where the inspector addon is at 1.x
  #("UserID", "d6d2b6b0-c9e0-4646-8627-0b1bdd4a92bb", 100.0), # queue all of this user's crashes
  #("SecondsSinceLastCrash", lambda x: 300 >= int(x) >= 0, 100.0), # queue all crashes that happened within 5 minutes of another crash
  (None, True, 10.0) # queue 10% of what's left
]

minimalVersionForUnderstandingRefusal = cm.Option()
minimalVersionForUnderstandingRefusal.default = { 'Firefox': '3.5.4' }

benchmark = cm.Option()
benchmark.default = False
benchmark.fromStringConverter = cm.booleanConverter

#---------------------------------------------------------------------------
# Logging

syslogHost = cm.Option()
syslogHost.doc = 'syslog hostname'
syslogHost.default = 'localhost'

syslogPort = cm.Option()
syslogPort.doc = 'syslog port'
syslogPort.default = 514

syslogFacilityString = cm.Option()
syslogFacilityString.doc = 'syslog facility string ("user", "local0", etc)'
syslogFacilityString.default = 'user'

syslogLineFormatString = cm.Option()
syslogLineFormatString.doc = 'python logging system format for syslog entries'
syslogLineFormatString.default = 'Socorro Collector (pid %(process)d): %(asctime)s %(levelname)s - %(threadName)s - %(message)s'

syslogErrorLoggingLevel = cm.Option()
syslogErrorLoggingLevel.doc = 'logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)'
syslogErrorLoggingLevel.default = 10


