import stat
import re

import socorro.lib.ConfigurationManager as cm

# Storage constants

# The form field the client sends the dump in
dumpField = cm.Option()
dumpField.default = "upload_file_minidump"

# when storing in the file system, how deep should the radix directory depth be
storageDepth = cm.Option()
storageDepth.default = 2

# Returned to the client with a uuid following
dumpIDPrefix = cm.Option()
dumpIDPrefix.default = "bp-"

# Bugzilla 495700 - need to be able to ignore new Thottleable protocol
neverDiscard = cm.Option()
neverDiscard.default = True
neverDiscard.fromStringConverter = cm.booleanConverter

throttleConditions = cm.Option()
throttleConditions.default = [
  ("Version", lambda x: x[-3:] == "pre" or x[3] in 'ab', 100.0), # queue 100% of crashes with version ending in "pre" or having 'a' or 'b'
  #("Add-ons", re.compile('inspector\@mozilla\.org\:1\..*'), 75.0), # queue 75% of crashes where the inspector addon is at 1.x
  #("UserID", "d6d2b6b0-c9e0-4646-8627-0b1bdd4a92bb", 100.0), # queue all of this user's crashes
  #("SecondsSinceLastCrash", lambda x: 300 >= int(x) >= 0, 100.0), # queue all crashes that happened within 5 minutes of another crash
  (None, True, 10.0) # queue 10% of what's left
]

minimalVersionForUnderstandingRefusal = cm.Option()
minimalVersionForUnderstandingRefusal.default = { 'Firefox': '3.5.4' }

benchmark = cm.Option()
benchmark.default = False
benchmark.fromStringConverter = cm.booleanConverter


#-------------------------------------------------------------------------------
# storage

from config.commonconfig import jsonFileSuffix
from config.commonconfig import dumpFileSuffix

localFS = cm.Option()
localFS.doc = 'a path to a local file system'
localFS.default = './'

localFSDumpDirCount = cm.Option()
localFSDumpDirCount.doc = 'the number of dumps to be stored in a single directory in the local file system'
localFSDumpDirCount.default = 1024

localFSDumpGID = cm.Option()
localFSDumpGID.doc="the group ID for saved crashes in local file system (optional)"
localFSDumpGID.default = None

localFSDumpPermissions = cm.Option()
localFSDumpPermissions.doc = "a number used for permissions crash dump files in the local file system"
localFSDumpPermissions.default = stat.S_IRGRP | stat.S_IWGRP | stat.S_IRUSR | stat.S_IWUSR

localFSDirPermissions = cm.Option()
localFSDirPermissions.doc = "a number used for permissions for directories in the local file system"
localFSDirPermissions = stat.S_IRGRP | stat.S_IXGRP | stat.S_IWGRP | stat.S_IRUSR | stat.S_IXUSR | stat.S_IWUSR

fallbackFS = cm.Option()
fallbackFS.doc = 'a path to a local file system to use if local store fails'
fallbackFS.default = './fallback'

fallbackDumpDirCount = cm.Option()
fallbackDumpDirCount.doc = 'the number of dumps to be stored in a single directory in the fallback File System'
fallbackDumpDirCount.default = 1024

fallbackDumpGID = cm.Option()
fallbackDumpGID.doc="the group ID for saved crashes in fallback File System (optional)"
fallbackDumpGID.default = None

fallbackDumpPermissions = cm.Option()
fallbackDumpPermissions.doc = "a number used for permissions crash dump files in the fallback File System"
fallbackDumpPermissions.default = stat.S_IRGRP | stat.S_IWGRP | stat.S_IRUSR | stat.S_IWUSR

fallbackDirPermissions = cm.Option()
fallbackDirPermissions.doc = "a number used for permissions for directories in the fallback File System"
fallbackDirPermissions = stat.S_IRGRP | stat.S_IXGRP | stat.S_IWGRP | stat.S_IRUSR | stat.S_IXUSR | stat.S_IWUSR

#-------------------------------------------------------------------------------
# Logging

syslogHost = cm.Option()
syslogHost.doc = 'syslog hostname'
syslogHost.default = 'localhost'

syslogPort = cm.Option()
syslogPort.doc = 'syslog port'
syslogPort.default = 514

syslogFacilityString = cm.Option()
syslogFacilityString.doc = 'syslog facility string ("user", "local0", etc)'
syslogFacilityString.default = 'user'

syslogLineFormatString = cm.Option()
syslogLineFormatString.doc = 'python logging system format for syslog entries'
syslogLineFormatString.default = 'Socorro Collector (pid %(process)d): %(asctime)s %(levelname)s - %(threadName)s - %(message)s'

syslogErrorLoggingLevel = cm.Option()
syslogErrorLoggingLevel.doc = 'logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)'
syslogErrorLoggingLevel.default = 10


